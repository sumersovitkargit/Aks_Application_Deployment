name: CI/CD Pipeline for Azure Kubernetes Service

on:
  push:
    branches:
      - main  # Trigger CI/CD on push to main branch

jobs:
  # CI Job: Build and Push Docker Image to ACR
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up QEMU & Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Azure Container Registry (ACR)
      - name: Log in to ACR
        uses: docker/login-action@v3
        with:
          registry: ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io
          username: ${{ secrets.AZURE_REGISTRY_USERNAME }}
          password: ${{ secrets.AZURE_REGISTRY_PASSWORD }}

      # Build & Push Docker Image
      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io/my-app:${{ github.sha }}
            ${{ secrets.AZURE_REGISTRY_NAME }}.azurecr.io/my-app:latest

  # CD Job: Deploy to AKS
  deploy:
    runs-on: ubuntu-latest
    needs: ci
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Azure CLI
      - name: Set up Azure CLI
        uses: azure/setup-azurecli@v2

      # Azure login
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Set up Kubernetes context
      - name: Set up Kubernetes context
        run: |
          az aks get-credentials --resource-group ${{ secrets.AZURE_RESOURCE_GROUP }} --name ${{ secrets.AZURE_AKS_CLUSTER }} --overwrite-existing

      # Deploy using Kubernetes manifest
      - name: Deploy to AKS
        run: |
          kubectl apply -f kubernetes/deploy.yml
          kubectl rollout status deployment/my-app

      # Logout from Azure CLI (Optional)
      - name: Logout from Azure CLI
        run: az logout
